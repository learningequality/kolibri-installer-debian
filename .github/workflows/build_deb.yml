
name: Build Debian installer

on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      tar-url:
        description: 'URL for Kolibri tar file'
        required: true
  workflow_call:
    inputs:
      tar-file-name:
        required: true
        type: string
      ref:
        description: 'A ref for this workflow to check out its own repo'
        required: true
        type: string
    outputs:
      deb-file-name:
        description: "DEB file name"
        value: ${{ jobs.build_deb.outputs.deb-file-name }}

jobs:
  build_deb:
    name: Build DEB file
    runs-on: ubuntu-latest
    outputs:
      deb-file-name: ${{ steps.get-deb-filename.outputs.deb-file-name }}
    steps:
    - uses: actions/checkout@v3
      if: ${{ !inputs.ref }}
    - uses: actions/checkout@v3
      if: ${{ inputs.ref }}
      with:
        repository: learningequality/kolibri-installer-debian
        ref: ${{ inputs.ref }}
    - uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('setup.py', 'build_requires.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: 3.10.11
    - name: Download the tarfile from URL
      if: ${{ github.event.inputs.tar-url }}
      run: make get-tar tar=${{ github.event.inputs.tar-url }}
    - name: Download the tarfile from artifacts
      if: ${{ inputs.tar-file-name }}
      uses: actions/download-artifact@v3
      with:
        name: ${{ inputs.tar-file-name }}
        path: build_src
    - name: Install Debian build package dependencies
      run: sudo apt install -y devscripts debhelper dh-python python3-all python3-pytest po-debconf python3-setuptools
    - name: Run the build
      run: make kolibri.deb
    - name: Get DEB filename
      id: get-deb-filename
      run: echo "::set-output name=deb-file-name::$(ls dist | grep .deb | cat)"
    - uses: actions/upload-artifact@v3
      with:
        name: ${{ steps.get-deb-filename.outputs.deb-file-name }}
        path: dist/${{ steps.get-deb-filename.outputs.deb-file-name }}
